generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?

  // ðŸ”¹ Extra fields
  phone           String?
  college         String?
  education       String? // (BTech/BS, MTech/MS, PhD)
  branch          String?
  year            String? // (current year or passout)
  company         String? // optional if employed
  signupCompleted Boolean   @default(false) // <--- add this
  accounts        Account[]
  sessions        Session[]
  purchases Purchase[]
  cart Cart?
}

model Cart {
  id        String     @id @default(cuid())
  user      User       @relation(fields: [userId], references: [id])
  userId    String     @unique
  items     CartItem[]
}

model CartItem {
  id      String   @id @default(cuid())
  cartId  String
  dojoId  String
  quantity Int     @default(1)

  cart    Cart     @relation(fields: [cartId], references: [id])
  dojo    Dojo     @relation(fields: [dojoId], references: [id])
}

model Dojo {
  id          String   @id  
  title       String
  description String?
  price       Int      // store price in INR paise (e.g. â‚¹499 â†’ 49900)
  thumbnail   String
  purchases Purchase[]
  cartItems   CartItem[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Purchase {
  id               String   @id @default(cuid())
  userId           String
  dojoId           String
  razorpayOrderId  String
  razorpayPaymentId String
  status           String   // "paid", "pending", etc.
  createdAt        DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  dojo Dojo @relation(fields: [dojoId], references: [id])

  @@unique([userId, dojoId]) // prevent duplicates
}